import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Utilities class
 * 
 *
 */
public class Utilities
{

	/**
	 * @param m - Munsell color to convert to RGB
	 * @param data derived from the MunselltoRGB csv file
	 * @return an Array containing the R G B values
	 */
	public static int[] MunsellToRGB(MunsellColorModel m, List<String[]> data){
		
		//r,g,b, values, remain at -1 if the color is not found
		int r = -1;
		int g = -1;
		int b = -1;
		
		//represents whether the RGB color has been found
		boolean done = false;
		
		//searches the data for the munsell color
		//when it is found, sets the corresponding r g b values to the values found in the data
		for(String[] d: data) {
			if(!done) {
				if(d[2].equals(m.getHueString()) && 
						Double.parseDouble(d[3]) == (m.getHueDouble()) &&
						Integer.parseInt(d[4]) == (m.getValue()) &&
						Integer.parseInt(d[5]) == (m.getChroma())) {
					
					r = Integer.parseInt(d[6]);
					g = Integer.parseInt(d[7]);
					b = Integer.parseInt(d[8]);
					
					done = true;
				}
			}
		}
		
		int[] rgb = {r,g,b};
		return rgb;
	}
	

	/**
	 * @param r,g,b -- RGB values of the color
	 * @param data derived from the MunselltoRGB csv file
	 * @return the color in MunsellColor form
	 */
	public static MunsellColorModel RGBToMunsell(int r, int g, int b, List<String[]> data){
		
		String hueS = "X";
		Double hueD = -1.0;
		Double value = -1.0;
		Double chroma = -1.0;
				

		
		//represents whether the Munsell color has been found
		boolean done = false;
		
		//searches the data for the RGB color
		//when it is found, sets the corresponding Munsell fields to the values found in the data
		for(String[] d: data) {
			if(!done) {
				if(Integer.parseInt(d[0])==r && 
				Integer.parseInt(d[1])==g &&
				Integer.parseInt(d[2])==b){
					
					hueD = Double.parseDouble(d[3].substring(0,2));
					hueS = d[3].substring(3);
					value = Double.parseDouble(d[4]);
					chroma = Double.parseDouble(d[5]);				
					done = true;
				}
			}
		}
		
		MunsellColorModel color = new MunsellColorModel(hueS, hueD, value, chroma);
		return color;
	}
	
	
	//test comment
	//opens a csv file and returns an arraylist containing the data
	public static List<String[]> openMunsell2RGB(String filePath) throws IOException {	
		
		List<String[]> allData = new ArrayList<String[]>();
		String line = "";
		BufferedReader csvReader = new BufferedReader(new FileReader(filePath));
		while ((line = csvReader.readLine()) != null) {
		    String[] data = line.split(",");
		    allData.add(data);
		}
		allData.remove(0);
		csvReader.close();
		return allData;
		
	}
	
}
