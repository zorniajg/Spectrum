import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.MalformedURLException;

import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;

/**
 * The main program GUI. (attempted to) Rename for clarity. (but it didn't like
 * it when i tried to commit with the new name).
 * 
 * @author Kelly Ortega, Alex Tran, Ben Girardi, Jacob Zorniak, Mateo
 *         Price-Aguirre
 * 
 * @version 28 October, 2019: created to display the Spectrum features.
 *
 */
public class GUI extends JFrame
{

    private static final long serialVersionUID = 1L;

    /**
     * initializes the program.
     * 
     * @param args commandline args.
     * @throws IOException in case it can't read a file.
     * @throws MalformedURLException in case it can't read the URL.
     */
    public static void main(String args[]) throws MalformedURLException, IOException
    {
        JFrame frame = new JFrame("Spectrum");
        frame.setLayout(new BorderLayout());
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JTabbedPane tabbedPane = new JTabbedPane();
        ColorPanel p1 = new ColorPanel();

        tabbedPane.addTab("Color Panel", p1);

        JPanel south = new JPanel();

        JButton complementary = new JButton("Complementary Colors");
        complementary.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JFrame showComplementary = new JFrame("Complementary Color");
                showComplementary.setBounds(0, 0, 300, 300);
                JPanel compPanel = new JPanel();
                int[] rgb;
                try
                {
                    rgb = Utilities.MunsellToRGB(
                            HarmoniousConversionUtilities
                                    .complementaryConversion(p1.getCurrentColor()),
                            Utilities.openMunsell2RGB("Munsell2RGB.csv"));
                    Color compColor = new Color(rgb[0], rgb[1], rgb[2]);
                    compPanel.setBackground(compColor);
                    JLabel compColorInfo = new JLabel(HarmoniousConversionUtilities
                            .complementaryConversion(p1.getCurrentColor()).toString());
                    compPanel.add(compColorInfo);
                    showComplementary.add(compPanel);
                    showComplementary.setVisible(true);
                }
                catch (IOException e1)
                {
                    e1.printStackTrace();
                }
            }
        });

        JButton analogous = new JButton("Analogous Colors");
        analogous.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JFrame showAnalogous = new JFrame("Analogous Colors");
                showAnalogous.setLayout(new GridBagLayout());
                showAnalogous.setBounds(0, 0, 300, 300);
                int[] rgb;
                try
                {
                    for (MunsellColorModel color : HarmoniousConversionUtilities
                            .analogousColors(p1.getCurrentColor()))
                    {
                        rgb = Utilities.MunsellToRGB(color,
                                Utilities.openMunsell2RGB("Munsell2RGB.csv"));

                        Color analogousColor = new Color(rgb[0], rgb[1], rgb[2]);
                        JPanel analogousPanel = new JPanel();
                        analogousPanel.setBackground(analogousColor);
                        JLabel compColorInfo = new JLabel(color.toString());
                        analogousPanel.add(compColorInfo);
                        showAnalogous.add(analogousPanel);
                    }
                    showAnalogous.setVisible(true);
                }
                catch (IOException e1)
                {
                    e1.printStackTrace();
                }
            }
        });
        JButton triad = new JButton("Triad Colors");

        JButton square = new JButton("Square Colors");

        south.add(complementary);
        south.add(analogous);
        south.add(triad);
        south.add(square);

        frame.add(south, BorderLayout.SOUTH);
        
        PixelSelect p2 = new PixelSelect();
        tabbedPane.addTab("Pixel Selector", p2);
        
        // For future tabs
        // JComponent p2 = null;
        // tabbedPane.addTab("test", p2);

        frame.add(tabbedPane);
        frame.setSize(1000, 800);
        frame.setVisible(true);

    }
}
